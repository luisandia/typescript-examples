{"ast":null,"code":"var _jsxFileName = \"/Users/luisandia/lsad/typescript/react-and-typescript/HOCs-React-Redux/components/TaskList.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTasks } from '../actions';\nexport class TaskList extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onClick\", () => {\n      const {\n        fetchTasks\n      } = this.props;\n      fetchTasks();\n    });\n  }\n\n  render() {\n    const {\n      tasks\n    } = this.props;\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, tasks.map((task, i) => {\n      return __jsx(\"li\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 20\n        }\n      }, task.title);\n    })), __jsx(\"button\", {\n      onClick: this.onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"Fetch Tasks\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: state.tasks\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchTasks: () => dispatch(fetchTasks())\n  };\n};\n\nexport const ConnectedTaskList = connect(mapStateToProps, mapDispatchToProps)(TaskList);","map":{"version":3,"sources":["/Users/luisandia/lsad/typescript/react-and-typescript/HOCs-React-Redux/components/TaskList.tsx"],"names":["React","connect","fetchTasks","TaskList","Component","props","render","tasks","map","task","i","title","onClick","mapStateToProps","state","mapDispatchToProps","dispatch","ConnectedTaskList"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,QAA6C,YAA7C;AAgBA,OAAO,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAiD;AAAA;AAAA;;AAAA,qCAC5C,MAAM;AACd,YAAM;AAAEF,QAAAA;AAAF,UAAiB,KAAKG,KAA5B;AACAH,MAAAA,UAAU;AACX,KAJqD;AAAA;;AAMtDI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKF,KAAvB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,KAAK,CAACC,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KAAa;AACtB,aAAO;AAAI,QAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaD,IAAI,CAACE,KAAlB,CAAP;AACD,KAFA,CADH,CADF,EAME;AAAQ,MAAA,OAAO,EAAE,KAAKC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANF,CADF;AAUD;;AAlBqD;;AAqBxD,MAAMC,eAAe,GAAIC,KAAD,IAAqB;AAC3C,SAAO;AACLP,IAAAA,KAAK,EAAEO,KAAK,CAACP;AADR,GAAP;AAGD,CAJD;;AAMA,MAAMQ,kBAAkB,GAAIC,QAAD,IAAwB;AACjD,SAAO;AACLd,IAAAA,UAAU,EAAE,MAAMc,QAAQ,CAACd,UAAU,EAAX;AADrB,GAAP;AAGD,CAJD;;AAKA,OAAO,MAAMe,iBAAiB,GAAGhB,OAAO,CACtCY,eADsC,EAEtCE,kBAFsC,CAAP,CAG/BZ,QAH+B,CAA1B","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { AppState } from '../reducer';\nimport { fetchTasks, FetchTasksAction } from '../actions';\nimport { Task } from '../types';\nimport { Dispatch } from 'redux';\n\ninterface OwnProps {}\n\ninterface StateProps {\n  tasks: Task[];\n}\n\ninterface DispatchProps {\n  fetchTasks: () => void;\n}\n\ninterface AllProps extends StateProps, DispatchProps, OwnProps {}\n\nexport class TaskList extends React.Component<AllProps> {\n  onClick = () => {\n    const { fetchTasks } = this.props;\n    fetchTasks();\n  };\n\n  render() {\n    const { tasks } = this.props;\n    return (\n      <div>\n        <ul>\n          {tasks.map((task, i) => {\n            return <li key={i}>{task.title}</li>;\n          })}\n        </ul>\n        <button onClick={this.onClick}>Fetch Tasks</button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    tasks: state.tasks,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    fetchTasks: () => dispatch(fetchTasks()),\n  };\n};\nexport const ConnectedTaskList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TaskList);\n"]},"metadata":{},"sourceType":"module"}